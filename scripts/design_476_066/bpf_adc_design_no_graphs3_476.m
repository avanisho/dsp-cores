function Hd = bpf_adc_design_no_graphs3_476(Fs_adc, Fs_adc_image)%UNTITLED Returns a discrete-time filter object.

%
% MATLAB Code
% Generated by MATLAB(R) 7.13 and the DSP System Toolbox 8.1.
%
% Generated on: 12-Jun-2013 10:50:47
%

% Equiripple Bandpass filter designed using the FIRPM function.

% All frequency values are in Hz.

% All frequency values are in Hz.
Fs = Fs_adc;  % Sampling Frequency

Fpass1 = Fs_adc_image - 4e6;    % First Passband Frequency
Fstop1 = Fpass1 - 6e6;          % First Stopband Frequency
Fpass2 = Fs_adc_image + 4e6;  % Second Passband Frequency
Fstop2 = Fpass2 + 6e6;  % Second Stopband Frequency

Dstop1 = 0.001;           % First Stopband Attenuation
Dpass  = 0.057501127785;  % Passband Ripple
Dstop2 = 0.001;           % Second Stopband Attenuation
dens   = 20;              % Density Factor

% Calculate the order from the parameters using FIRPMORD.
[N, Fo, Ao, W] = firpmord([Fstop1 Fpass1 Fpass2 Fstop2]/(Fs/2), [0 1 ...
                          0], [Dstop1 Dpass Dstop2]);

% Calculate the coefficients using the FIRPM function.
b  = firpm(N, Fo, Ao, W, {dens});
Hd = dfilt.dffir(b);

% Set the arithmetic property.
set(Hd, 'Arithmetic', 'fixed', ...
    'CoeffWordLength', 16, ...
    'CoeffAutoScale', true, ...
    'Signed',         true, ...
    'InputWordLength', 16, ...
    'inputFracLength', 15, ...
    'FilterInternals',  'FullPrecision');
denormalize(Hd);

% [EOF]
