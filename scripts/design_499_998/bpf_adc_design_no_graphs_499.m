function Hbpf_adc = bpf_adc_design_no_graphs_499()
%BPF_ADC_DESIGN_NO_GRAPHS Returns a discrete-time filter object.

% Inputs:
%   frf = revolution frequency. (476.066MHz, 499.798MHz)

%
% MATLAB Code
% Generated by MATLAB(R) 7.12 and the DSP System Toolbox 8.0.
%
% Generated on: 14-Jan-2013 23:28:18
%

% FIR least-squares Bandpass filter designed using the FIRLS function.

% All frequency values are in Hz.
Fs = 117500000;  % Sampling Frequency
%fvtoolFs = 112583200;  % Sampling Frequency

N      = 80;        % Order
Fstop1 = 23798000;  % First Stopband Frequency
Fpass1 = 27798000;  % First Passband Frequency
Fpass2 = 31798000;  % Second Passband Frequency
Fstop2 = 35798000;  % Second Stopband Frequency
%Fstop1 = 18733200;  % First Stopband Frequency
%Fpass1 = 22733200;  % First Passband Frequency
%Fpass2 = 27733200;  % Second Passband Frequency
%Fstop2 = 31733200;  % Second Stopband Frequency
Wstop1 = 1;         % First Stopband Weight
Wpass  = 2;         % Passband Weight
Wstop2 = 1;         % Second Stopband Weight

% Calculate the coefficients using the FIRLS function.
b  = firls(N, [0 Fstop1 Fpass1 Fpass2 Fstop2 Fs/2]/(Fs/2), [0 0 1 1 0 ...
           0], [Wstop1 Wpass Wstop2]);
Hbpf_adc = dfilt.dffir(b);
% Set the arithmetic property.
set(Hbpf_adc, 'Arithmetic', 'fixed', ...
    'CoeffWordLength', 16, ...
    'CoeffAutoScale', true, ...
    'Signed',         true, ...
    'InputWordLength', 16, ...
    'inputFracLength', 15, ...
    'FilterInternals',  'FullPrecision');
denormalize(Hbpf_adc);
